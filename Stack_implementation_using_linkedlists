//Creating Stack Using Linkedlist Template class


#include<iostream>
using namespace std;

template<typename T>
class Node{
    public:
        T data;
        Node<T> *next;                           //If we are using the variable of template class then we need to mention TEMPLATE VARIABLE
        
        Node(T data){
            this->data=data;
            next=null;
        }
};
template<typename T>
class Stack{
    Node<T> *head;                              //If we are using the variable of template class then we need to mention TEMPLATE VARIABLE
    T size;                                     //No.of elements present in the stack
    
    public:
    
     stack(){
       head=NULL;
       size=0;
     }
    
     T getsize(){
       return size;
     }
    
     bool isempty(){
       return size==0;
     }
    
    void push(T element){
       Node<T> *newnode=new Node<T>(element);
       newnode->next=head;
       head=newnode;
       size++;
     }
    
     T pop(){
     if(isempty()){
      cout<<"The Stack is empty"<<endl;
      return 0;
     }
       T ans=head->data;
       Node<T> *temp=head;
       head=head->next;
       delete temp;
       size++;
       return ans;
     }
    
     T top(){
      if(isempty()){
        cout<<"Stack is empty"<<endl;
        return 0;
       }
       return head->data;
     }
 };
