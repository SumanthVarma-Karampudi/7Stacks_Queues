----------------------------------------------------------------Implementation using linkedlist--------------------------------------------------------------------------
template<typename T>
class Node{
 public:
  T data;
  Node* next;
  
  Node(T data){
    this->data=data;
    next=NULL;
  }
};


template<typename T>
class Queue{
  public:
   Node<T>* head;
   Node<T>* tail;
   int size;
   
  Queue(){
    head=NULL;
    tail=NULL;
    size=0;
  }
}
  
  
  
  int getsize(){
    return size;
  }
  
  
  bool isempty(){
    return size==0;
  }
  
  
  void enqueue(T element){
    Node<T> *newnode=new Node<T>(element);
    if(head==NULL)
    {
      head=newnode;
      tail=newnode;
    }
    else
    {
    tail->next=newnode;
    tail=newnode;
    }
    size++;
  }
  
  
  T front(){
    if(isempty()){
      return 0;
    }
    return head->data;
  }
    
   
 T pop(){
   if(isempty()){
      return 0;
   }
   T ans=head->data;
   Node<T>* temp=head;
   head=head->next;
   delete temp;
   size--;
   return ans;
 }
